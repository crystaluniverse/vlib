name: Release Hero On Github Based on Tag

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*    
    # branches: ["development"]

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
            short-name: macos-arm64
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            short-name: linux-i64
          - target: x86_64-apple-darwin
            os: macos-latest
            short-name: macos-i64
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref_name }} and your repository is ${{ github.repository }}."

      - name: Install dependencies
        run: |
          if [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
            sudo apt update
            sudo apt install -y libgc-dev tmux git rsync curl imagemagick redis   
            redis-server --daemonize yes
            sudo apt install -y build-essential wget autoconf libtool
            cd /tmp
            wget https://github.com/bitcoin-core/secp256k1/archive/refs/tags/v0.3.2.tar.gz
            tar -xvf v0.3.2.tar.gz
            cd secp256k1-0.3.2/
            ./autogen.sh
            ./configure
            sudo make -j 5
            sudo make install            
          else
            brew install libgc tmux git rsync curl redis libpq
            brew services start redis
          fi          
          sleep 2
          redis-cli ping  

      - name: Setup Vlang
        uses: vlang/setup-v@v1.3
        with:
          check-latest: true

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Checkout another repository
        uses: actions/checkout@v3
        with:
          repository: freeflowuniverse/webcomponents
          path: webcomponents

      - name: Install crystallib
        run: |
          mkdir -p ~/.vmodules/freeflowuniverse
          rm -f ~/.vmodules/freeflowuniverse/crystallib
          ln -s $(pwd)/crystallib ~/.vmodules/freeflowuniverse/crystallib
          rm -f ~/.vmodules/freeflowuniverse/webcomponents
          ln -s $(pwd)/webcomponents/webcomponents ~/.vmodules/freeflowuniverse/webcomponents    

      - name: Build hero
        run: |
          pushd cli/hero
          v -enable-globals -w hero.v
          chmod +x hero
          mkdir -p ~/upload
          mv hero ~/upload/hero_${{ matrix.short-name }}
          find ~/upload
          popd

      - name: Extract tag name
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: upload hero
        uses: actions/upload-artifact@v4
        with:
          name: hero-${{ matrix.short-name }}.zip
          path: ~/upload/hero_${{ matrix.short-name }}
          if-no-files-found: error



  publish-me:
    name: Create GitHub Release
    needs: build
    permissions:
      contents: write       
    runs-on: ubuntu-latest
    steps:
      - name: download hero
        uses: actions/download-artifact@v4
        with:
          path: download
          pattern: hero-*
          merge-multiple: true          
      - run: |
          set -x
          find  download

      - uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "download/*"
          tags: false
          tag_name: "latest"     
          update_latest_release: true
          verbose: true
          default_release_name: "latest"
          overwrite: true
