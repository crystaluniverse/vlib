name: Release Hero on S3

permissions:
  contents: write


on:
  push:
    branches: ["development"]   
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            short-name: linux-i64
          # - target: aarch64-unknown-linux-musl
          #   os: ubuntu-latest
          #   short-name: linux-arm64            
          # - target: x86_64-apple-darwin
          #   os: macos-latest
          #   short-name: macos-i64
          # - target: aarch64-apple-darwin
          #   os: macos-latest
          #   short-name: macos-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref_name }} and your repository is ${{ github.repository }}."

      - name: Install dependencies
        run: |
          if [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
            set -x
            sudo apt update
            sudo apt install -y libgc-dev tmux git rsync curl imagemagick redis gcc
            redis-server --daemonize yes
            sudo apt install -y build-essential wget autoconf libtool
            cd /tmp
            wget https://github.com/bitcoin-core/secp256k1/archive/refs/tags/v0.3.2.tar.gz
            tar -xvf v0.3.2.tar.gz
            cd secp256k1-0.3.2/
            ./autogen.sh
            ./configure
            sudo make -j 5
            sudo make install            
          else
            brew install libgc tmux git rsync curl redis libpq
            brew services start redis
          fi          
          sleep 2
          redis-cli ping

      - name: Setup Vlang
        uses: vlang/setup-v@v1.3
        with:
          check-latest: true

      - name: Check out repository code
        uses: actions/checkout@v3

      # - name: Checkout another repository
      #   uses: actions/checkout@v3
      #   with:
      #     repository: freeflowuniverse/webcomponents
      #     path: webcomponents


      - name: Get crystalweb
        run: |
          mkdir -p ~/.vmodules
          pushd ~/.vmodules
          git clone --depth 1 https://github.com/freeflowuniverse/webcomponents
          popd

      - name: Install crystallib
        run: |
          mkdir -p ~/.vmodules/freeflowuniverse
          rm -f ~/.vmodules/freeflowuniverse/crystallib
          ln -s $(pwd)/crystallib ~/.vmodules/freeflowuniverse/crystallib
          # rm -f ~/.vmodules/freeflowuniverse/webcomponents
          # ln -s $(pwd)/webcomponents/webcomponents ~/.vmodules/freeflowuniverse/webcomponents    

      - name: Build hero
        run: |
          set -x
          pushd cli/hero
          uname -m
          if [[ "$OSTYPE" == "darwin"* ]]; then
          v -enable-globals -w -cg hero.v
          else
          # -prod
          v -enable-globals -w -cg -cflags -static -cc gcc hero.v
          fi
          chmod +x hero
          mkdir -p ~/upload
          mv hero ~/upload/hero-${{ matrix.short-name }}
          find ~/upload
          popd

      - name: Extract tag name
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: upload hero
        uses: actions/upload-artifact@v4
        with:
          name: hero-${{ matrix.short-name }}.zip
          path: ~/upload/hero-${{ matrix.short-name }}
          if-no-files-found: error

  publish-me:
    name: Push to S3
    needs: build
    permissions:
      contents: write       
    runs-on: ubuntu-latest
    steps:

      - name: Install dependencies
        run: |
          wget https://github.com/Backblaze/B2_Command_Line_Tool/releases/latest/download/b2-linux
          chmod +x  b2-linux
          mv b2-linux /usr/local/bin/b2

      - name: download hero
        uses: actions/download-artifact@v4
        with:
          path: download
          pattern: hero-*
          merge-multiple: true          
      - run: |
          set -x
          find  download

      - name: S3 Upload
        run: |
          set -x
          export bucket=threefold
          export B2_APPLICATION_KEY_ID=${{ secrets.S3KEYID }}
          export B2_APPLICATION_KEY=${{ secrets.S3APPID }}
          b2 authorize-account
          export bucket=threefold
          b2 upload-file ${bucket}  download/hero-linux-i64  linux-i64/hero
          # b2 upload-file ${bucket}  download/hero-linux-arm64 linux-arm64/hero
          # b2 upload-file ${bucket}  download/hero-macos-arm64 macos-arm64/hero
          # b2 upload-file ${bucket}  download/hero-macos-i64 macos-i64/hero
          # b2 sync download b2://${bucket}/hero
